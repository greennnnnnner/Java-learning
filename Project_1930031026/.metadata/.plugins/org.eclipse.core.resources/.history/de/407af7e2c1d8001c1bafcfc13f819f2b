import java.util.Scanner;

public class CLI {
	private static Scanner input = new Scanner(System.in);
	public static void main(String[] args) throws NotALenderException {
		Library l = new Library("UIC Library");
		while(true) {
		switch(readPosInt("Type an action (total:1 add:2 get:3 more:4 less:5 quit:6): ")) {
			case 1:
				System.out.println("Total number of borrowed books: "+l.totalBorrowedBooks());
				break;
			case 2:
				switch(readPosInt("Type the user role (lender:1 borrower: 2): ")) {
				case 1:
					Lender lender = new Lender(readLine("Enter the name of the user: "), readPosInt("Enter the initial number of borrowed books: "));
					l.addUser(lender);
					System.out.println("Lender \"" + lender.getName()+"\" lending " + lender.getBook() + " book(s) has beed added");
					break;
				case 2:
					Borrower borrower = new Borrower(readLine("Enter the name of the user: "), readPosInt("Enter the initial number of borrowed books: "));
					l.addUser(borrower);
					break;
				default:
					System.out.println("Unknown user role!");
				}
				
		}
		
		
		
		}
	}
	private static String readLine(String string) {
		System.out.print(string);//print this string on the screen
		return input.nextLine();
	}
	private static int readPosInt(String string) {
		while(true){
			System.out.print(string);
		try{
			if(input.hasNextInt()) {
				int ni = input.nextInt();
				input.nextLine();
				if(ni>=0) {
					return ni;
				}else {
					System.out.println("Positive integers only");
				}
				
			}else {
				throw new InputMismatchException("You must type an integer!");
			}
		}
		catch(InputMismatchException ex){
			System.out.println(ex.getMessage());
			input.nextLine();
			}
		}
		
	}
	
	
	
}
